plugins {
  id 'com.android.library'
  id 'kotlin-android'
  id 'kotlin-kapt'

  id 'maven-publish'
}

apply from: '../jacoco.gradle'

android
{
  compileSdkVersion 33

  defaultConfig
  {
    minSdkVersion 21
    targetSdkVersion 33

    sourceSets
    {
      main.java.srcDirs += 'src/main/kotlin'

      // Test
      test.java.srcDirs += "src/test/kotlin"
      androidTest.java.srcDirs += "src/androidTest/kotlin"
    }

    testInstrumentationRunner = "androidx.test.runner.AndroidJUnitRunner"
  }

  buildFeatures
  {
    viewBinding true
    dataBinding true
    compose true
  }

  compileOptions
  {
    sourceCompatibility JavaVersion.VERSION_1_8
    targetCompatibility JavaVersion.VERSION_1_8
  }

  kotlinOptions
  {
    jvmTarget = '1.8'
  }

  composeOptions
  {
    kotlinCompilerExtensionVersion '1.3.2'
  }

  buildTypes
  {
    release
    {
      minifyEnabled false
      zipAlignEnabled true
      proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
    }

    debug
    {
      minifyEnabled false
      shrinkResources false

      testCoverageEnabled true
    }
  }
}

dependencies
{
  // Kotlin
  implementation "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
  implementation 'androidx.core:core-ktx:1.9.0'

  //Design
  implementation 'androidx.appcompat:appcompat:1.5.1'
  implementation 'androidx.fragment:fragment-ktx:1.5.4'

  //androidx MVVM pattern
  api "androidx.lifecycle:lifecycle-viewmodel-ktx:2.5.1"
  api "androidx.lifecycle:lifecycle-livedata-ktx:2.5.1"
  api "androidx.lifecycle:lifecycle-runtime-ktx:2.5.1"

  //Compose
  implementation platform('androidx.compose:compose-bom:2022.11.00')
  implementation 'androidx.activity:activity-compose'
  implementation 'androidx.compose.material:material'
  implementation 'androidx.compose.ui:ui-tooling'
  implementation 'androidx.lifecycle:lifecycle-viewmodel-compose'
  implementation 'androidx.lifecycle:lifecycle-runtime-compose:2.6.0-alpha03'

  //For espresso
  implementation "androidx.test.espresso:espresso-idling-resource:3.5.0"

  // Third party
  api 'com.jakewharton.timber:timber:5.0.1'

  // JUnit
  testImplementation "junit:junit:4.13.2"

  // Android Tests
  androidTestImplementation 'androidx.test.ext:junit:1.1.4'
  androidTestImplementation 'androidx.test:runner:1.5.1'
  androidTestImplementation 'androidx.arch.core:core-testing:2.1.0'

  androidTestImplementation 'androidx.test.espresso:espresso-core:3.5.0'
}

task androidJavadocs(type: Javadoc) {
  enabled = false
  source = android.sourceSets.main.java.srcDirs
  classpath += project.files(android.getBootClasspath().join(File.pathSeparator))

  android.libraryVariants.all { variant ->
    if (variant.name == 'release')
    {
      owner.classpath += variant.javaCompileProvider.get().classpath
    }
  }
  exclude '**/R.html', '**/R.*.html', '**/index.html'
}

task androidJavadocsJar(type: Jar, dependsOn: androidJavadocs) {
  archiveClassifier.set('javadoc')
  from androidJavadocs.destinationDir
}

task androidSourcesJar(type: Jar) {
  archiveClassifier.set('sources')
  from android.sourceSets.main.java.srcDirs
}

publishing
{
  publications
  {
    release(MavenPublication)
    {
      groupId = 'fr.rolandl'
      artifactId = 'rijsel'
      version = '1.0.0-SNAPSHOT'

      afterEvaluate
      {
        from components.release
      }
    }
  }
}